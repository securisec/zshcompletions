#compdef hashcat

_hashcat_arglist=(
	{'(--hash-type)-m','(-m)--hash-type'}'[Hash-type]:select hash type:->hash_type'
	{'(--attack-mode)-a','(-a)--attack-mode'}'[Attack-mode]:select attack mode:->attack_mode'
	'--quiet[Suppress output]'
	'--hex-charset[Assume charset is given in hex]'
	'--hex-salt[Assume salt is given in hex]'
	'--hex-wordlist[Assume words in wordlist are given in hex]'
	'--force[Ignore warnings]'
	'--status[Enable automatic update of the status screen]'
	'--status-timer[Sets seconds between status screen updates to X]:type seconds:()'
	'--stdin-timeout-abort[Abort if there is no input from stdin for X seconds]:type seconds:()'
	'--machine-readable[Display the status view in a machine-readable format]'
	'--keep-guessing[Keep guessing the hash after it has been cracked]'
	'--self-test-disable[Disable self-test functionality on startup]'
	'--loopback[Add new plains to induct directory]'
	'--markov-hcstat2[Specify hcstat2 file to use]:select hcstat file:_files'
	'--markov-disable[Disables markov-chains, emulates classic brute-force]'
	'--markov-classic[Enables classic markov-chains, no per-position]'
	{'(--markov-threshold)-t','(-t)--markov-threshold'}'[Threshold X when to stop accepting new markov-chains]:type threshold:()'
	'--runtime[Abort session after X seconds of runtime]:type seconds:()'
	'--session[Define specific session name]:type session name:()'
	'--restore[Restore session from --session]'
	'--restore-disable[Do not write restore file]'
	'--restore-file-path[Specific path to restore file]:select restore file:_files'
	{'(--outfile)-o','(-o)--outfile'}'[Define outfile for recovered hash]:select outfile:_files'
	'--outfile-format[Define outfile-format X for recovered hash]:select outfile format:->outfile_format'
	'--outfile-autohex-disable[Disable the use of $HEX\[\] in output plains]'
	'--outfile-check-timer[Sets seconds between outfile checks to X]:type seconds:()'
	'--wordlist-autohex-disable[Disable the conversion of $HEX\[\] from the wordlist]'
	{'(--separator)-p','(-p)--separator'}'[Separator char for hashlists and outfile]:type separator:()'
	'--stdout[Do not crack a hash, instead print candidates only]'
	'--show[Compare hashlist with potfile; show cracked hashes]'
	'--left[Compare hashlist with potfile; show uncracked hashes]'
	'--username[Enable ignoring of usernames in hashfile]'
	'--remove[Enable removal of hashes once they are cracked]'
	'--remove-timer[Update input hash file each X seconds]:type second:()'
	'--potfile-disable[Do not write potfile]'
	'--potfile-path[Specific path to potfile]:select potfile path:_files'
	'--encoding-from[Force internal wordlist encoding from X]:type code:()'
	'--encoding-to[Force internal wordlist encoding to X]:type code:()'
	'--debug-mode[Defines the debug mode (hybrid only by using rules)]:select debug mode:->debug_mode'
	'--debug-file[Output file for debugging rules]:select file:_files'
	'--induction-dir[Specify the induction directory to use for loopback]:select dir:_files'
	'--outfile-check-dir[Specify the outfile directory to monitor for plains]:select dir:_files'
	'-logfile-disable[Disable the logfile]'
	'--hccapx-message-pair[Load only message pairs from hccapx matching X]:type num:()'
	'--nonce-error-corrections[The BF size range to replace APs nonce last bytes]:type num:()'
	'--keyboard-layout-mapping[Keyboard layout mapping table for special hash-modes]:select file:_files'
	'--truecrypt-keyfiles[Keyfiles to use, separated with commas]:select file:_files'
	'--veracrypt-keyfiles[Keyfiles to use, separated with commas]:select file:_files'
	'--veracrypt-pim[VeraCrypt personal iterations multiplier]:type num:()'
	{'(--benchmark)-b','(-b)--benchmark'}'[Run benchmark of selected hash-modes]'
	'--benchmark-all[Run benchmark of all hash-modes (requires -b)]'
	'--speed-only[Return expected speed of the attack, then quit]'
	'--progress-only[Return ideal progress step size and time to process]'
	{'(--segment-size)-c','(-c)--segment-size'}'[Sets size in MB to cache from the wordfile to X]:type num:()'
	'--bitmap-min[Sets minimum bits allowed for bitmaps to X]:type num:()'
	'--bitmap-max[Sets maximum bits allowed for bitmaps to X]:type num:()'
	'--cpu-affinity[Locks to CPU devices, separated with commas]:type comma separated numbers:()'
	'--example-hashes[Show an example hash for each hash-mode]'
	{'(--opencl-info)-I','(-I)--opencl-info'}'[Show info about detected OpenCL platforms/devices]'
	'--opencl-platforms[OpenCL platforms to use, separated with commas]:type platforms:()'
	{'(--opencl-devices)-d','(-d)--opencl-devices'}'[OpenCL devices to use, separated with commas]:type devices:()'
	{'(--opencl-device-types)-D','(-D)--opencl-device-types'}'[OpenCL device-types to use, separated with commas]:select types of devices:->device_type'
	'--opencl-vector-width[Manually override OpenCL vector-width to X]:type num:()'
	{'(--optimized-kernel-enable)-O','(-O)--optimized-kernel-enable'}'[Enable optimized kernels (limits password length)]'
	{'(--workload-profile)-w','(-w)--workload-profile'}'[Enable a specific workload profile]:select workload profile:->workload_profile'
	{'(---kernel-accel)-n','(-n)--kernel-accel'}'[Manual workload tuning, set outerloop step size to X]:type num:()'
	{'(--kernel-loops)-u','(-u)--kernel-loops'}'[Manual workload tuning, set innerloop step size to X]:type num:()'
	{'(--kernel-threads)-T','(-T)--kernel-threads'}'[Manual workload tuning, set thread count to X]:type num:()'
	'--spin-damp[Use CPU for device synchronization, in percent]:type num:()'
	'--hwmon-disable[Disable temperature and fanspeed reads and triggers]'
	'--hwmon-temp-abort[Abort if temperature reaches X degrees Celsius]:type num:()'
	'--scrypt-tmto[Manually override TMTO value for scrypt to X]:type num:()'
	{'(--skip)-s','(-s)--skip'}'[Skip X words from the start]:type num:()'
	{'(--limit)-l','(-l)--limit'}'[Limit X words from the start + skipped words]:type num:()'
	'--keyspace[Show keyspace base:mod values and quit]'
	{'(--rule-left)-j','(-j)--rule-left'}'[Single rule applied to each word from left wordlist]:type rule:()'
	{'(--rule-right )-k','(-k)--rule-right '}'[Single rule applied to each word from right wordlist]:type rule:()'
	{'(--rules-file)-r','(-r)--rules-file'}'[Multiple rules applied to each word from wordlists]:select file:_files'
	{'(--generate-rules)-g','(-g)--generate-rules'}'[Generate X random rules]:type num:()'
	'--generate-rules-func-min[Force min X functions per rule]:type num:()'
	'--generate-rules-func-max[Force min X functions per rule]:type num:()'
	'--generate-rules-seed[Force RNG seed set to X ]:type num:()'
	{'(--custom-charset1)-1','(-1)--custom-charset1'}'[User-defined charset ?1]:select charset:->charset'
	{'(--custom-charset2)-2','(-2)--custom-charset2'}'[User-defined charset ?2]:select charset:->charset'
	{'(--custom-charset3)-3','(-3)--custom-charset3'}'[User-defined charset ?3]:select charset:->charset'
	{'(--custom-charset4)-4','(-4)--custom-charset4'}'[User-defined charset ?4]:select charset:->charset'
	{'(--increment)-i','(-i)--increment'}'[Enable mask increment mode]'
	'--increment-min[Start mask incrementing at X]:type num:()'
	'--increment-max[Stop mask incrementing at X]:type num:()'
	{'(--slow-candidates)-S','(-S)--slow-candidates'}'[Enable slower (but advanced) candidate generators]'
	'--brain-server[Enable brain server]'
	{'(--brain-client)-z','(-z)--brain-client'}'[Enable brain client, activates -S]'
	'--brain-client-features[Define brain client features]:select feature:->client_feature'
	'--brain-host[Brain server host (IP or domain)]:type str:()'
	'--brain-port[Brain server port]:type num:()'
	'--brain-password[Brain server authentication password]:type str:()'
	'--brain-session[Overrides automatically calculated brain session]:type num:()'
	'--brain-session-whitelist[Allow given sessions only, separated with commas]:type num:()'
)

_hash_types=(
	'900[MD4]'
	'0[MD5]'
	'100[SHA1]'
	'1300[SHA2-224]'
	'1400[SHA2-256]'
	'10800[SHA2-384]'
	'1700[SHA2-512]'
	'17300[SHA3-224]'
	'17400[SHA3-256]'
	'17500[SHA3-384]'
	'17600[SHA3-512]'
	'6000[RIPEMD-160]'
	'600[BLAKE2b-512]'
	'31000[BLAKE2s-256]'
	'31100[SM3]'
	'11700[GOSTR34.11-2012(Streebog)256-bit,big-endian]'
	'11800[GOSTR34.11-2012(Streebog)512-bit,big-endian]'
	'6900[GOSTR34.11-94]'
	'5100[HalfMD5]'
	'17700[Keccak-224]'
	'17800[Keccak-256]'
	'17900[Keccak-384]'
	'18000[Keccak-512]'
	'6100[Whirlpool]'
	'10100[SipHash]'
	'70[md5(utf16le($pass))]'
	'170[sha1(utf16le($pass))]'
	'1470[sha256(utf16le($pass))]'
	'10870[sha384(utf16le($pass))]'
	'1770[sha512(utf16le($pass))]'
	'610[BLAKE2b-512($pass.$salt)]'
	'620[BLAKE2b-512($salt.$pass)]'
	'32600[CubeCart(whirlpool($salt.$pass.$salt))]'
	'10[md5($pass.$salt)]'
	'20[md5($salt.$pass)]'
	'3800[md5($salt.$pass.$salt)]'
	'3710[md5($salt.md5($pass))]'
	'4110[md5($salt.md5($pass.$salt))]'
	'4010[md5($salt.md5($salt.$pass))]'
	'21300[md5($salt.sha1($salt.$pass))]'
	'40[md5($salt.utf16le($pass))]'
	'21310[md5($salt1.sha1($salt2.$pass))]'
	'3730[md5($salt1.strtoupper(md5($salt2.$pass)))]'
	'2600[md5(md5($pass))]'
	'3910[md5(md5($pass).md5($salt))]'
	'2630[md5(md5($pass.$salt))]'
	'3500[md5(md5(md5($pass)))]'
	'3610[md5(md5(md5($pass)).$salt)]'
	'31700[md5(md5(md5($pass).$salt1).$salt2)]'
	'4400[md5(sha1($pass))]'
	'4410[md5(sha1($pass).$salt)]'
	'20900[md5(sha1($pass).md5($pass).sha1($pass))]'
	'4420[md5(sha1($pass.$salt))]'
	'21200[md5(sha1($salt).md5($pass))]'
	'4430[md5(sha1($salt.$pass))]'
	'4300[md5(strtoupper(md5($pass)))]'
	'30[md5(utf16le($pass).$salt)]'
	'110[sha1($pass.$salt)]'
	'120[sha1($salt.$pass)]'
	'4900[sha1($salt.$pass.$salt)]'
	'4520[sha1($salt.sha1($pass))]'
	'24300[sha1($salt.sha1($pass.$salt))]'
	'29000[sha1($salt.sha1(utf16le($username).':'.utf16le($pass)))]'
	'140[sha1($salt.utf16le($pass))]'
	'19300[sha1($salt1.$pass.$salt2)]'
	'14400[sha1(CX)]'
	'4700[sha1(md5($pass))]'
	'4710[sha1(md5($pass).$salt)]'
	'21100[sha1(md5($pass.$salt))]'
	'18500[sha1(md5(md5($pass)))]'
	'4500[sha1(sha1($pass))]'
	'4510[sha1(sha1($pass).$salt)]'
	'5000[sha1(sha1($salt.$pass.$salt))]'
	'130[sha1(utf16le($pass).$salt)]'
	'1410[sha256($pass.$salt)]'
	'1420[sha256($salt.$pass)]'
	'22300[sha256($salt.$pass.$salt)]'
	'20720[sha256($salt.sha256($pass))]'
	'21420[sha256($salt.sha256_bin($pass))]'
	'1440[sha256($salt.utf16le($pass))]'
	'20800[sha256(md5($pass))]'
	'20710[sha256(sha256($pass).$salt)]'
	'21400[sha256(sha256_bin($pass))]'
	'1430[sha256(utf16le($pass).$salt)]'
	'10810[sha384($pass.$salt)]'
	'10820[sha384($salt.$pass)]'
	'10840[sha384($salt.utf16le($pass))]'
	'10830[sha384(utf16le($pass).$salt)]'
	'1710[sha512($pass.$salt)]'
	'1720[sha512($salt.$pass)]'
	'1740[sha512($salt.utf16le($pass))]'
	'32410[sha512(sha512($pass).$salt)]'
	'32420[sha512(sha512_bin($pass).$salt)]'
	'1730[sha512(utf16le($pass).$salt)]'
	'50[HMAC-MD5(key=$pass)]'
	'60[HMAC-MD5(key=$salt)]'
	'6050[HMAC-RIPEMD160(key=$pass)]'
	'6060[HMAC-RIPEMD160(key=$salt)]'
	'150[HMAC-SHA1(key=$pass)]'
	'160[HMAC-SHA1(key=$salt)]'
	'1450[HMAC-SHA256(key=$pass)]'
	'1460[HMAC-SHA256(key=$salt)]'
	'1750[HMAC-SHA512(key=$pass)]'
	'1760[HMAC-SHA512(key=$salt)]'
	'11750[HMAC-Streebog-256(key=$pass),big-endian]'
	'11760[HMAC-Streebog-256(key=$salt),big-endian]'
	'11850[HMAC-Streebog-512(key=$pass),big-endian]'
	'11860[HMAC-Streebog-512(key=$salt),big-endian]'
	'28700[AmazonAWS4-HMAC-SHA256]'
	'11500[CRC32]'
	'27900[CRC32C]'
	'28000[CRC64Jones]'
	'18700[JavaObjecthashCode()]'
	'25700[MurmurHash]'
	'27800[MurmurHash3]'
	'14100[3DES(PT=$salt,key=$pass)]'
	'14000[DES(PT=$salt,key=$pass)]'
	'26401[AES-128-ECBNOKDF(PT=$salt,key=$pass)]'
	'26402[AES-192-ECBNOKDF(PT=$salt,key=$pass)]'
	'26403[AES-256-ECBNOKDF(PT=$salt,key=$pass)]'
	'15400[ChaCha20]'
	'14500[LinuxKernelCryptoAPI(2.4)]'
	'14900[Skip32(PT=$salt,key=$pass)]'
	'11900[PBKDF2-HMAC-MD5]'
	'12000[PBKDF2-HMAC-SHA1]'
	'10900[PBKDF2-HMAC-SHA256]'
	'12100[PBKDF2-HMAC-SHA512]'
	'8900[scrypt]'
	'400[phpass]'
	'16100[TACACS+]'
	'30420[DANERFC7929/RFC8162SHA2-256]'
	'11400[SIPdigestauthentication(MD5)]'
	'5300[IKE-PSKMD5]'
	'5400[IKE-PSKSHA1]'
	'25100[SNMPv3HMAC-MD5-96]'
	'25000[SNMPv3HMAC-MD5-96/HMAC-SHA1-96]'
	'25200[SNMPv3HMAC-SHA1-96]'
	'26700[SNMPv3HMAC-SHA224-128]'
	'26800[SNMPv3HMAC-SHA256-192]'
	'26900[SNMPv3HMAC-SHA384-256]'
	'27300[SNMPv3HMAC-SHA512-384]'
	'2500[WPA-EAPOL-PBKDF2]'
	'2501[WPA-EAPOL-PMK]'
	'22000[WPA-PBKDF2-PMKID+EAPOL]'
	'22001[WPA-PMK-PMKID+EAPOL]'
	'16800[WPA-PMKID-PBKDF2]'
	'16801[WPA-PMKID-PMK]'
	'7350[IPMI2RAKPHMAC-MD5]'
	'7300[IPMI2RAKPHMAC-SHA1]'
	'10200[CRAM-MD5]'
	'31300[MSSNTP]'
	'16500[JWT(JSONWebToken)]'
	'29200[Radmin3]'
	'19600[Kerberos5,etype17,TGS-REP]'
	'19800[Kerberos5,etype17,Pre-Auth]'
	'28800[Kerberos5,etype17,DB]'
	'32100[Kerberos5,etype17,AS-REP]'
	'19700[Kerberos5,etype18,TGS-REP]'
	'19900[Kerberos5,etype18,Pre-Auth]'
	'28900[Kerberos5,etype18,DB]'
	'32200[Kerberos5,etype18,AS-REP]'
	'7500[Kerberos5,etype23,AS-REQPre-Auth]'
	'13100[Kerberos5,etype23,TGS-REP]'
	'18200[Kerberos5,etype23,AS-REP]'
	'5500[NetNTLMv1/NetNTLMv1+ESS]'
	'27000[NetNTLMv1/NetNTLMv1+ESS(NT)]'
	'5600[NetNTLMv2]'
	'27100[NetNTLMv2(NT)]'
	'29100[FlaskSessionCookie($salt.$salt.$pass)]'
	'4800[iSCSICHAPauthentication,MD5(CHAP)]'
	'8500[RACF]'
	'6300[AIX{smd5}]'
	'6700[AIX{ssha1}]'
	'6400[AIX{ssha256}]'
	'6500[AIX{ssha512}]'
	'3000[LM]'
	'19000[QNX/etc/shadow(MD5)]'
	'19100[QNX/etc/shadow(SHA256)]'
	'19200[QNX/etc/shadow(SHA512)]'
	'19210[QNX7/etc/shadow(SHA512)]'
	'15300[DPAPImasterkeyfilev1(context1and2)]'
	'15310[DPAPImasterkeyfilev1(context3)]'
	'15900[DPAPImasterkeyfilev2(context1and2)]'
	'15910[DPAPImasterkeyfilev2(context3)]'
	'7200[GRUB2]'
	'12800[MS-AzureSyncPBKDF2-HMAC-SHA256]'
	'12400[BSDiCrypt,ExtendedDES]'
	'1000[NTLM]'
	'9900[Radmin2]'
	'5800[SamsungAndroidPassword/PIN]'
	'28100[WindowsHelloPIN/Password]'
	'13800[WindowsPhone8+PIN/password]'
	'2410[Cisco-ASAMD5]'
	'9200[Cisco-IOS$8$(PBKDF2-SHA256)]'
	'9300[Cisco-IOS$9$(scrypt)]'
	'5700[Cisco-IOStype4(SHA256)]'
	'2400[Cisco-PIXMD5]'
	'8100[CitrixNetScaler(SHA1)]'
	'22200[CitrixNetScaler(SHA512)]'
	'1100[DomainCachedCredentials(DCC),MSCache]'
	'2100[DomainCachedCredentials2(DCC2),MSCache2]'
	'31500[DomainCachedCredentials(DCC),MSCache(NT)]'
	'31600[DomainCachedCredentials2(DCC2),MSCache2,(NT)]'
	'7000[FortiGate(FortiOS)]'
	'26300[FortiGate256(FortiOS256)]'
	'125[ArubaOS]'
	'501[JuniperIVE]'
	'22[JuniperNetScreen/SSG(ScreenOS)]'
	'15100[Juniper/NetBSDsha1crypt]'
	'26500[iPhonepasscode(UIDkey+SystemKeybag)]'
	'122[macOSv10.4,macOSv10.5,macOSv10.6]'
	'1722[macOSv10.7]'
	'7100[macOSv10.8+(PBKDF2-SHA512)]'
	'3200[bcrypt$2*$,Blowfish(Unix)]'
	'500[md5crypt,MD5(Unix),Cisco-IOS$1$(MD5)]'
	'1500[descrypt,DES(Unix),TraditionalDES]'
	'7400[sha256crypt$5$,SHA256(Unix)]'
	'1800[sha512crypt$6$,SHA512(Unix)]'
	'24600[SQLCipher]'
	'131[MSSQL(2000)]'
	'132[MSSQL(2005)]'
	'1731[MSSQL(2012,2014)]'
	'24100[MongoDBServerKeySCRAM-SHA-1]'
	'24200[MongoDBServerKeySCRAM-SHA-256]'
	'12[PostgreSQL]'
	'11100[PostgreSQLCRAM(MD5)]'
	'28600[PostgreSQLSCRAM-SHA-256]'
	'3100[OracleH:Type(Oracle7+)]'
	'112[OracleS:Type(Oracle11+)]'
	'12300[OracleT:Type(Oracle12+)]'
	'7401[MySQL$A$(sha256crypt)]'
	'11200[MySQLCRAM(SHA1)]'
	'200[MySQL323]'
	'300[MySQL4.1/MySQL5]'
	'8000[SybaseASE]'
	'8300[DNSSEC(NSEC3)]'
	'25900[KNXIPSecure-DeviceAuthenticationCode]'
	'16400[CRAM-MD5Dovecot]'
	'1411[SSHA-256(Base64),LDAP{SSHA256}]'
	'1711[SSHA-512(Base64),LDAP{SSHA512}]'
	'24900[DahuaAuthenticationMD5]'
	'10901[RedHat389-DSLDAP(PBKDF2-HMAC-SHA256)]'
	'15000[FileZillaServer>=0.9.55]'
	'12600[ColdFusion10+]'
	'1600[Apache$apr1$MD5,md5apr1,MD5(APR)]'
	'141[Episerver6.x<.NET4]'
	'1441[Episerver6.x>=.NET4]'
	'1421[hMailServer]'
	'101[nsldap,SHA-1(Base64),NetscapeLDAPSHA]'
	'111[nsldaps,SSHA-1(Base64),NetscapeLDAPSSHA]'
	'7700[SAPCODVNB(BCODE)]'
	'7701[SAPCODVNB(BCODE)fromRFC_READ_TABLE]'
	'7800[SAPCODVNF/G(PASSCODE)]'
	'7801[SAPCODVNF/G(PASSCODE)fromRFC_READ_TABLE]'
	'10300[SAPCODVNH(PWDSALTEDHASH)iSSHA-1]'
	'20712[RSASecurityAnalytics/NetWitness(sha256)]'
	'32031[AdobeAEM(SSPR,SHA-256withSalt)]'
	'32041[AdobeAEM(SSPR,SHA-512withSalt)]'
	'133[PeopleSoft]'
	'13500[PeopleSoftPS_TOKEN]'
	'32000[NetIQSSPR(MD5)]'
	'32050[NetIQSSPR(PBKDF2WithHmacSHA1)]'
	'32060[NetIQSSPR(PBKDF2WithHmacSHA256)]'
	'32070[NetIQSSPR(PBKDF2WithHmacSHA512)]'
	'32020[NetIQSSPR(SHA-1withSalt)]'
	'32030[NetIQSSPR(SHA-256withSalt)]'
	'32040[NetIQSSPR(SHA-512withSalt)]'
	'32010[NetIQSSPR(SHA1)]'
	'21500[SolarWindsOrion]'
	'21501[SolarWindsOrionv2]'
	'24[SolarWindsServ-U]'
	'8600[LotusNotes/Domino5]'
	'8700[LotusNotes/Domino6]'
	'9100[LotusNotes/Domino8]'
	'26200[OpenEdgeProgressEncode]'
	'20600[OracleTransportationManagement(SHA256)]'
	'4711[Huaweisha1(md5($pass).$salt)]'
	'20711[AuthMesha256]'
	'22400[AESCrypt(SHA256)]'
	'27400[VMwareVMX(PBKDF2-HMAC-SHA1+AES-256-CBC)]'
	'14600[LUKSv1(legacy)]'
	'29541[LUKSv1RIPEMD-160+AES]'
	'29542[LUKSv1RIPEMD-160+Serpent]'
	'29543[LUKSv1RIPEMD-160+Twofish]'
	'29511[LUKSv1SHA-1+AES]'
	'29512[LUKSv1SHA-1+Serpent]'
	'29513[LUKSv1SHA-1+Twofish]'
	'29521[LUKSv1SHA-256+AES]'
	'29522[LUKSv1SHA-256+Serpent]'
	'29523[LUKSv1SHA-256+Twofish]'
	'29531[LUKSv1SHA-512+AES]'
	'29532[LUKSv1SHA-512+Serpent]'
	'29533[LUKSv1SHA-512+Twofish]'
	'13711[VeraCryptRIPEMD160+XTS512bit(legacy)]'
	'13712[VeraCryptRIPEMD160+XTS1024bit(legacy)]'
	'13713[VeraCryptRIPEMD160+XTS1536bit(legacy)]'
	'13741[VeraCryptRIPEMD160+XTS512bit+boot-mode(legacy)]'
	'13742[VeraCryptRIPEMD160+XTS1024bit+boot-mode(legacy)]'
	'13743[VeraCryptRIPEMD160+XTS1536bit+boot-mode(legacy)]'
	'29411[VeraCryptRIPEMD160+XTS512bit]'
	'29412[VeraCryptRIPEMD160+XTS1024bit]'
	'29413[VeraCryptRIPEMD160+XTS1536bit]'
	'29441[VeraCryptRIPEMD160+XTS512bit+boot-mode]'
	'29442[VeraCryptRIPEMD160+XTS1024bit+boot-mode]'
	'29443[VeraCryptRIPEMD160+XTS1536bit+boot-mode]'
	'13751[VeraCryptSHA256+XTS512bit(legacy)]'
	'13752[VeraCryptSHA256+XTS1024bit(legacy)]'
	'13753[VeraCryptSHA256+XTS1536bit(legacy)]'
	'13761[VeraCryptSHA256+XTS512bit+boot-mode(legacy)]'
	'13762[VeraCryptSHA256+XTS1024bit+boot-mode(legacy)]'
	'13763[VeraCryptSHA256+XTS1536bit+boot-mode(legacy)]'
	'29451[VeraCryptSHA256+XTS512bit]'
	'29452[VeraCryptSHA256+XTS1024bit]'
	'29453[VeraCryptSHA256+XTS1536bit]'
	'29461[VeraCryptSHA256+XTS512bit+boot-mode]'
	'29462[VeraCryptSHA256+XTS1024bit+boot-mode]'
	'29463[VeraCryptSHA256+XTS1536bit+boot-mode]'
	'13721[VeraCryptSHA512+XTS512bit(legacy)]'
	'13722[VeraCryptSHA512+XTS1024bit(legacy)]'
	'13723[VeraCryptSHA512+XTS1536bit(legacy)]'
	'29421[VeraCryptSHA512+XTS512bit]'
	'29422[VeraCryptSHA512+XTS1024bit]'
	'29423[VeraCryptSHA512+XTS1536bit]'
	'13771[VeraCryptStreebog-512+XTS512bit(legacy)]'
	'13772[VeraCryptStreebog-512+XTS1024bit(legacy)]'
	'13773[VeraCryptStreebog-512+XTS1536bit(legacy)]'
	'13781[VeraCryptStreebog-512+XTS512bit+boot-mode(legacy)]'
	'13782[VeraCryptStreebog-512+XTS1024bit+boot-mode(legacy)]'
	'13783[VeraCryptStreebog-512+XTS1536bit+boot-mode(legacy)]'
	'29471[VeraCryptStreebog-512+XTS512bit]'
	'29472[VeraCryptStreebog-512+XTS1024bit]'
	'29473[VeraCryptStreebog-512+XTS1536bit]'
	'29481[VeraCryptStreebog-512+XTS512bit+boot-mode]'
	'29482[VeraCryptStreebog-512+XTS1024bit+boot-mode]'
	'29483[VeraCryptStreebog-512+XTS1536bit+boot-mode]'
	'13731[VeraCryptWhirlpool+XTS512bit(legacy)]'
	'13732[VeraCryptWhirlpool+XTS1024bit(legacy)]'
	'13733[VeraCryptWhirlpool+XTS1536bit(legacy)]'
	'29431[VeraCryptWhirlpool+XTS512bit]'
	'29432[VeraCryptWhirlpool+XTS1024bit]'
	'29433[VeraCryptWhirlpool+XTS1536bit]'
	'23900[BestCryptv3VolumeEncryption]'
	'16700[FileVault2]'
	'27500[VirtualBox(PBKDF2-HMAC-SHA256&AES-128-XTS)]'
	'27600[VirtualBox(PBKDF2-HMAC-SHA256&AES-256-XTS)]'
	'20011[DiskCryptorSHA512+XTS512bit]'
	'20012[DiskCryptorSHA512+XTS1024bit]'
	'20013[DiskCryptorSHA512+XTS1536bit]'
	'22100[BitLocker]'
	'12900[AndroidFDE(SamsungDEK)]'
	'8800[AndroidFDE<=4.3]'
	'18300[AppleFileSystem(APFS)]'
	'6211[TrueCryptRIPEMD160+XTS512bit(legacy)]'
	'6212[TrueCryptRIPEMD160+XTS1024bit(legacy)]'
	'6213[TrueCryptRIPEMD160+XTS1536bit(legacy)]'
	'6241[TrueCryptRIPEMD160+XTS512bit+boot-mode(legacy)]'
	'6242[TrueCryptRIPEMD160+XTS1024bit+boot-mode(legacy)]'
	'6243[TrueCryptRIPEMD160+XTS1536bit+boot-mode(legacy)]'
	'29311[TrueCryptRIPEMD160+XTS512bit]'
	'29312[TrueCryptRIPEMD160+XTS1024bit]'
	'29313[TrueCryptRIPEMD160+XTS1536bit]'
	'29341[TrueCryptRIPEMD160+XTS512bit+boot-mode]'
	'29342[TrueCryptRIPEMD160+XTS1024bit+boot-mode]'
	'29343[TrueCryptRIPEMD160+XTS1536bit+boot-mode]'
	'6221[TrueCryptSHA512+XTS512bit(legacy)]'
	'6222[TrueCryptSHA512+XTS1024bit(legacy)]'
	'6223[TrueCryptSHA512+XTS1536bit(legacy)]'
	'29321[TrueCryptSHA512+XTS512bit]'
	'29322[TrueCryptSHA512+XTS1024bit]'
	'29323[TrueCryptSHA512+XTS1536bit]'
	'6231[TrueCryptWhirlpool+XTS512bit(legacy)]'
	'6232[TrueCryptWhirlpool+XTS1024bit(legacy)]'
	'6233[TrueCryptWhirlpool+XTS1536bit(legacy)]'
	'29331[TrueCryptWhirlpool+XTS512bit]'
	'29332[TrueCryptWhirlpool+XTS1024bit]'
	'29333[TrueCryptWhirlpool+XTS1536bit]'
	'12200[eCryptfs]'
	'10400[PDF1.1-1.3(Acrobat2-4)]'
	'10410[PDF1.1-1.3(Acrobat2-4),collider#1]'
	'10420[PDF1.1-1.3(Acrobat2-4),collider#2]'
	'10500[PDF1.4-1.6(Acrobat5-8)]'
	'25400[PDF1.4-1.6(Acrobat5-8)-userandownerpass]'
	'10600[PDF1.7Level3(Acrobat9)]'
	'10700[PDF1.7Level8(Acrobat10-11)]'
	'9400[MSOffice2007]'
	'9500[MSOffice2010]'
	'9600[MSOffice2013]'
	'25300[MSOffice2016-SheetProtection]'
	'9700[MSOffice<=2003$0/$1,MD5+RC4]'
	'9710[MSOffice<=2003$0/$1,MD5+RC4,collider#1]'
	'9720[MSOffice<=2003$0/$1,MD5+RC4,collider#2]'
	'9810[MSOffice<=2003$3,SHA1+RC4,collider#1]'
	'9820[MSOffice<=2003$3,SHA1+RC4,collider#2]'
	'9800[MSOffice<=2003$3/$4,SHA1+RC4]'
	'18400[OpenDocumentFormat(ODF)1.2(SHA-256,AES)]'
	'18600[OpenDocumentFormat(ODF)1.1(SHA-1,Blowfish)]'
	'16200[AppleSecureNotes]'
	'23300[AppleiWork]'
	'6600[1Password,agilekeychain]'
	'8200[1Password,cloudkeychain]'
	'31800[1Password,mobilekeychain(1Password8)]'
	'9000[PasswordSafev2]'
	'5200[PasswordSafev3]'
	'6800[LastPass+LastPasssniffed]'
	'13400[KeePass1(AES/Twofish)andKeePass2(AES)]'
	'29700[KeePass1(AES/Twofish)andKeePass2(AES)-keyfileonlymode]'
	'23400[Bitwarden]'
	'16900[AnsibleVault]'
	'26000[Mozillakey3.db]'
	'26100[Mozillakey4.db]'
	'23100[AppleKeychain]'
	'11600[7-Zip]'
	'12500[RAR3-hp]'
	'23800[RAR3-p(Compressed)]'
	'23700[RAR3-p(Uncompressed)]'
	'13000[RAR5]'
	'17220[PKZIP(CompressedMulti-File)]'
	'17200[PKZIP(Compressed)]'
	'17225[PKZIP(MixedMulti-File)]'
	'17230[PKZIP(MixedMulti-FileChecksum-Only)]'
	'17210[PKZIP(Uncompressed)]'
	'20500[PKZIPMasterKey]'
	'20510[PKZIPMasterKey(6byteoptimization)]'
	'23001[SecureZIPAES-128]'
	'23002[SecureZIPAES-192]'
	'23003[SecureZIPAES-256]'
	'31200[VeeamVBK]'
	'13600[WinZip]'
	'18900[AndroidBackup]'
	'32700[KremlinEncrypt3.0w/NewDES]'
	'24700[Stuffit5]'
	'13200[AxCrypt1]'
	'13300[AxCrypt1in-memorySHA1]'
	'23500[AxCrypt2AES-128]'
	'23600[AxCrypt2AES-256]'
	'14700[iTunesbackup<10.0]'
	'14800[iTunesbackup>=10.0]'
	'8400[WBB3(WoltlabBurningBoard)]'
	'2612[PHPS]'
	'121[SMF(SimpleMachinesForum)>v1.1]'
	'3711[MediaWikiBtype]'
	'4521[Redmine]'
	'24800[UmbracoHMAC-SHA1]'
	'32300[EmpireCMS(Adminpassword)]'
	'11[Joomla<2.5.18]'
	'13900[OpenCart]'
	'11000[PrestaShop]'
	'16000[Tripcode]'
	'7900[Drupal7]'
	'4522[PunBB]'
	'2811[MyBB1.2+,IPB2+(InvisionPowerBoard)]'
	'2611[vBulletin<v3.8.5]'
	'2711[vBulletin>=v3.8.5]'
	'25600[bcrypt(md5($pass))/bcryptmd5]'
	'25800[bcrypt(sha1($pass))/bcryptsha1]'
	'30600[bcrypt(sha256($pass))/bcryptsha256]'
	'28400[bcrypt(sha512($pass))/bcryptsha512]'
	'30500[md5(md5($salt).md5(md5($pass)))]'
	'21[osCommerce,xt:Commerce]'
	'18100[TOTP(HMAC-SHA1)]'
	'2000[STDOUT]'
	'99999[Plaintext]'
	'21600[Web2pypbkdf2-sha512]'
	'10000[Django(PBKDF2-SHA256)]'
	'124[Django(SHA-1)]'
	'12001[Atlassian(PBKDF2-HMAC-SHA1)]'
	'19500[RubyonRailsRestful-Authentication]'
	'27200[RubyonRailsRestfulAuth(oneround,nositekey)]'
	'30000[PythonWerkzeugMD5(HMAC-MD5(key=$salt))]'
	'30120[PythonWerkzeugSHA256(HMAC-SHA256(key=$salt))]'
	'20200[Pythonpasslibpbkdf2-sha512]'
	'20300[Pythonpasslibpbkdf2-sha256]'
	'20400[Pythonpasslibpbkdf2-sha1]'
	'24410[PKCS#8PrivateKeys(PBKDF2-HMAC-SHA1+3DES/AES)]'
	'24420[PKCS#8PrivateKeys(PBKDF2-HMAC-SHA256+3DES/AES)]'
	'15500[JKSJavaKeyStorePrivateKeys(SHA1)]'
	'17010[GPG(AES-128/AES-256(SHA-1($pass)))]'
	'17020[GPG(AES-128/AES-256(SHA-512($pass)))]'
	'17030[GPG(AES-128/AES-256(SHA-256($pass)))]'
	'17040[GPG(CAST5(SHA-1($pass)))]'
	'22911[RSA/DSA/EC/OpenSSHPrivateKeys($0$)]'
	'22921[RSA/DSA/EC/OpenSSHPrivateKeys($6$)]'
	'22931[RSA/DSA/EC/OpenSSHPrivateKeys($1,$3$)]'
	'22941[RSA/DSA/EC/OpenSSHPrivateKeys($4$)]'
	'22951[RSA/DSA/EC/OpenSSHPrivateKeys($5$)]'
	'23200[XMPPSCRAMPBKDF2-SHA1]'
	'28300[Teamspeak3(channelhash)]'
	'22600[TelegramDesktop<v2.1.14(PBKDF2-HMAC-SHA1)]'
	'24500[TelegramDesktop>=v2.1.14(PBKDF2-HMAC-SHA512)]'
	'22301[TelegramMobileAppPasscode(SHA256)]'
	'23[Skype]'
	'30700[AnopeIRCServices(enc_sha256)]'
	'29600[TerraStationWallet(AES256-CBC(PBKDF2($pass)))]'
	'31900[MetaMaskMobileWallet]'
	'26600[MetaMaskWallet(needsalldata,checksAES-GCMtag)]'
	'26610[MetaMaskWallet(shorthash,plaintextcheck)]'
	'29800[Bisq.wallet(scrypt)]'
	'21000[BitSharesv0.x-sha512(sha512_bin(pass))]'
	'28501[BitcoinWIFprivatekey(P2PKH),compressed]'
	'28502[BitcoinWIFprivatekey(P2PKH),uncompressed]'
	'28503[BitcoinWIFprivatekey(P2WPKH,Bech32),compressed]'
	'28504[BitcoinWIFprivatekey(P2WPKH,Bech32),uncompressed]'
	'28505[BitcoinWIFprivatekey(P2SH(P2WPKH)),compressed]'
	'28506[BitcoinWIFprivatekey(P2SH(P2WPKH)),uncompressed]'
	'30901[Bitcoinrawprivatekey(P2PKH),compressed]'
	'30902[Bitcoinrawprivatekey(P2PKH),uncompressed]'
	'30903[Bitcoinrawprivatekey(P2WPKH,Bech32),compressed]'
	'30904[Bitcoinrawprivatekey(P2WPKH,Bech32),uncompressed]'
	'30905[Bitcoinrawprivatekey(P2SH(P2WPKH)),compressed]'
	'30906[Bitcoinrawprivatekey(P2SH(P2WPKH)),uncompressed]'
	'11300[Bitcoin/Litecoinwallet.dat]'
	'16600[ElectrumWallet(Salt-Type1-3)]'
	'21700[ElectrumWallet(Salt-Type4)]'
	'21800[ElectrumWallet(Salt-Type5)]'
	'12700[Blockchain,MyWallet]'
	'15200[Blockchain,MyWallet,V2]'
	'18800[Blockchain,MyWallet,SecondPassword(SHA256)]'
	'32500[Dogechain.infoWallet]'
	'25500[StargazerStellarWalletXLM]'
	'16300[EthereumPre-SaleWallet,PBKDF2-HMAC-SHA256]'
	'15600[EthereumWallet,PBKDF2-HMAC-SHA256]'
	'15700[EthereumWallet,SCRYPT]'
	'22500[MultiBitClassic.key(MD5)]'
	'27700[MultiBitClassic.wallet(scrypt)]'
	'22700[MultiBitHD(scrypt)]'
	'28200[ExodusDesktopWallet(scrypt)]'
	'29910[ENCsecurityDatavault(PBKDF2/nokeychain)]'
	'29920[ENCsecurityDatavault(PBKDF2/keychain)]'
	'29930[ENCsecurityDatavault(MD5/nokeychain)]'
	'29940[ENCsecurityDatavault(MD5/keychain)]'
	'31400[SecureCRTMasterPassphrasev2]'
)

_attack_modes=(
	'0[Straight]'
	'1[Combination]'
	'3[Brute-force]'
	'6[Hybrid Wordlist + Mask]'
	'7[Hybrid Mask + Wordlist]'
)

_outfile_formats=(
	'1[hash\[:salt\]]'
	'2[plain]'
	'3[hash\[:salt\]:plain]'
	'4[hex_plain]'
	'5[hash\[:salt\]:hex_plain]'
	'6[plain:hex_plain]'
	'7[hash\[:salt\]:plain:hex_plain]'
	'8[crackpos]'
	'9[hash\[:salt\]:crack_pos]'
	'10[plain:crack_pos]'
	'11[hash\[:salt\]:plain:crack_pos]'
	'12[hex_plain:crack_pos]'
	'13[hash\[:salt\]:hex_plain:crack_pos]'
	'14[plain:hex_plain:crack_pos]'
	'15[hash\[:salt\]:plain:hex_plain:crack_pos]'
)

_rule_debugging_modes=(
	'1[Finding-Rule]'
	'2[Original-Word]'
	'3[Original-Word:Finding-Rule]'
	'4[Original-Word:Finding-Rule:Processed-Word]'
)

_device_types=(
	'1[CPU]'
	'2[GPU]'
	'3[FPGA, DSP, Co-Processor]'
)

_workload_profiles=(
	'1[Pefromance: Low]'
	'2[Pefromance: Default]'
	'3[Pefromance: High]'
	'4[Pefromance: Nightmare]'
)

_charsets="?l | abcdefghijklmnopqrstuvwxyz
?u | ABCDEFGHIJKLMNOPQRSTUVWXYZ
?d | 0123456789
?h | 0123456789abcdef
?H | 0123456789ABCDEF
?s | Non alphabet symbols
?a | ?l?u?d?s
?b | 0x00 - 0xff
"

_brain_client_features=(
	'1[Send hashed passwords]'
	'2[Send attack positions]'
	'3[Send hashed passwords and attack positions]'
)

_hashcat() {
	_arguments $_hashcat_arglist
	case "$state" in
		hash_type)
			_values 'hash type' $_hash_types
			;;
		attack_mode)
			_values 'attack mode' $_attack_modes
			;;
		outfile_format)
			_values 'outfile_format' $_outfile_formats
			;;
		debug_mode)
			_values 'debug_mode' $_rule_debugging_modes
			;;
		device_type)
			_values -s ',' 'device_type' $_device_types
			;;
		workload_profile)
			_values 'workload profile' $_workload_profiles
			;;
		charset)
			_message -r $_charsets
			;;
		client_feature)
			_values 'client_feature' $_brain_client_features
			;;
		*)
			_files
			;;
	esac
}

case "$service" in
	hashcat)
		_hashcat "$@" && return 0
		;;
esac
